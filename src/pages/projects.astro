---
import AppLayout from "@layouts/AppLayout.astro";
import data from "@data/contributions.json";
import ProjectCard from "@components/ProjectCard.astro";

interface Project {
  name: string;
  description: string;
  stars: number;
  role: "author" | "contributor" | "maintainer";
  url: string;
  languages: string[];
}

const openSourceContributions = data as Project[];

openSourceContributions.sort((a, b) => {
  if (a.role === "maintainer" && b.role !== "maintainer") {
    return -1;
  }
  if (a.role === "maintainer" && b.role === "maintainer") {
    return a.stars > b.stars ? -1 : 1;
  }
  if (a.role === "author" && b.role === "author") {
    return a.stars > b.stars ? -1 : 1;
  }
  if (a.role === "author" && b.role !== "author") {
    return -1;
  }
  return 0;
});

const description = "I am passionate about software quality and have been actively involved in testing and automation for several years. Here is a list of projects and contributions I have made as a QA Analyst, including test automation, API testing, and performance testing.";
---

<AppLayout title="Daniela Gonzalez - QA Analist" 
            tags={["projects", "open source", "contributions", "github", "daniela gonzalez", 
              "daniela", "gonzalez", "danielagonzalez", "cuba", "qa", 
              "qa analist"]}
            description={description}>
  <p
    class="max-w-prose mb-10 font-normal dark:text-zinc-400 text-zinc-600 leading-relaxed"
  >
    {description}
  </p>
  <ul class="grid grid-cols-1 gap-8">
    {
      openSourceContributions.map((project) => (
        <ProjectCard
          name={project.name}
          description={project.description}
          stars={project.stars}
          role={project.role}
          url={project.url}
          languages={project.languages}
          website={project.website || ""}
        />
      ))
    }
  </ul>
</AppLayout>
